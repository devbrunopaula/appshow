{"ast":null,"code":"var _jsxFileName = \"/Users/brunopaula/Desktop/sandbox/next/app/components/Header/Settings.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Popover from '@material-ui/core/Popover';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CheckIcon from '@material-ui/icons/Check';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Switch from '@material-ui/core/Switch';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { i18n, withTranslation } from '../../i18n';\nimport useStyles from './header-style';\nlet themeType = 'light';\n\nif (typeof Storage !== 'undefined') {\n  themeType = localStorage.getItem('luxiTheme') || 'light';\n}\n\nfunction Settings(props) {\n  const {\n    0: ctn,\n    1: setCtn\n  } = useState(null);\n  const classes = useStyles();\n  const {\n    t\n  } = props;\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    0: isDark,\n    1: setDark\n  } = useState(themeType === 'dark');\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const handleChangeMode = () => {\n    setDark(!isDark);\n    props.toggleDark();\n  };\n\n  function handleChangeLang(lang) {\n    if (lang === 'ara') {\n      i18n.changeLanguage('ara');\n      props.toggleDir('rtl');\n    } else {\n      i18n.changeLanguage(lang);\n      props.toggleDir('ltr');\n    }\n\n    setAnchorEl(null);\n  }\n\n  useEffect(() => {\n    setCtn(document.getElementById('main-wrap'));\n  });\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  const {\n    invert\n  } = props;\n  return __jsx(\"div\", {\n    className: classes.setting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  }, __jsx(IconButton, {\n    \"aria-describedby\": id,\n    \"aria-label\": \"Settings\",\n    onClick: handleClick,\n    className: clsx(classes.icon, open && classes.active, invert && classes.invert),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, __jsx(SettingsIcon, {\n    fontSize: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  })), __jsx(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    container: ctn,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, __jsx(List, {\n    component: \"nav\",\n    className: classes.modeMenu,\n    \"aria-label\": \"Mode-menu\",\n    subheader: __jsx(ListSubheader, {\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, t('common:mobile-landing.header_theme')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  }, __jsx(Typography, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    component: \"label\",\n    container: true,\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 8\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, t('common:mobile-landing.header_light')), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(Switch, {\n    checked: isDark,\n    onChange: handleChangeMode,\n    value: isDark,\n    inputProps: {\n      'aria-label': 'checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 10\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, t('common:mobile-landing.header_dark')))))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }), __jsx(List, {\n    component: \"nav\",\n    className: classes.langMenu,\n    \"aria-label\": \"Language-menu\",\n    subheader: __jsx(ListSubheader, {\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, t('common:mobile-landing.header_language')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, i18n.options.allLanguages && i18n.options.allLanguages.map(val => __jsx(ListItem, {\n    key: val,\n    role: undefined,\n    dense: true,\n    button: true,\n    onClick: () => handleChangeLang(val),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 8\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, __jsx(\"i\", {\n    className: val,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 10\n    }\n  })), __jsx(ListItemText, {\n    primary: props.t('common:' + val),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }), i18n.language === val && __jsx(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 10\n    }\n  }, __jsx(CheckIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  })))))));\n}\n\nSettings.propTypes = {\n  toggleDark: PropTypes.func.isRequired,\n  toggleDir: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n  invert: PropTypes.bool\n};\nSettings.defaultProps = {\n  invert: false\n};\nexport default withTranslation(['common', 'mobile-landing'])(Settings);","map":{"version":3,"sources":["/Users/brunopaula/Desktop/sandbox/next/app/components/Header/Settings.js"],"names":["React","useState","useEffect","PropTypes","clsx","Popover","IconButton","SettingsIcon","CheckIcon","List","ListSubheader","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Switch","Divider","Grid","Typography","i18n","withTranslation","useStyles","themeType","Storage","localStorage","getItem","Settings","props","ctn","setCtn","classes","t","anchorEl","setAnchorEl","isDark","setDark","handleClick","event","currentTarget","handleClose","handleChangeMode","toggleDark","handleChangeLang","lang","changeLanguage","toggleDir","document","getElementById","open","Boolean","id","undefined","invert","setting","icon","active","vertical","horizontal","modeMenu","langMenu","options","allLanguages","map","val","language","propTypes","func","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport Popover from '@material-ui/core/Popover'\nimport IconButton from '@material-ui/core/IconButton'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport CheckIcon from '@material-ui/icons/Check'\nimport List from '@material-ui/core/List'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Switch from '@material-ui/core/Switch'\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport {i18n, withTranslation} from '../../i18n'\nimport useStyles from './header-style'\n\nlet themeType = 'light'\nif (typeof Storage !== 'undefined') {\n\tthemeType = localStorage.getItem('luxiTheme') || 'light'\n}\n\nfunction Settings(props) {\n\tconst [ctn, setCtn] = useState(null)\n\tconst classes = useStyles()\n\tconst {t} = props\n\n\tconst [anchorEl, setAnchorEl] = useState(null)\n\tconst [isDark, setDark] = useState(themeType === 'dark')\n\n\tfunction handleClick(event) {\n\t\tsetAnchorEl(event.currentTarget)\n\t}\n\n\tfunction handleClose() {\n\t\tsetAnchorEl(null)\n\t}\n\n\tconst handleChangeMode = () => {\n\t\tsetDark(!isDark)\n\t\tprops.toggleDark()\n\t}\n\n\tfunction handleChangeLang(lang) {\n\t\tif (lang === 'ara') {\n\t\t\ti18n.changeLanguage('ara')\n\t\t\tprops.toggleDir('rtl')\n\t\t} else {\n\t\t\ti18n.changeLanguage(lang)\n\t\t\tprops.toggleDir('ltr')\n\t\t}\n\t\tsetAnchorEl(null)\n\t}\n\n\tuseEffect(() => {\n\t\tsetCtn(document.getElementById('main-wrap'))\n\t})\n\n\tconst open = Boolean(anchorEl)\n\tconst id = open ? 'simple-popover' : undefined\n\tconst {invert} = props\n\treturn (\n\t\t<div className={classes.setting}>\n\t\t\t<IconButton\n\t\t\t\taria-describedby={id}\n\t\t\t\taria-label='Settings'\n\t\t\t\tonClick={handleClick}\n\t\t\t\tclassName={clsx(\n\t\t\t\t\tclasses.icon,\n\t\t\t\t\topen && classes.active,\n\t\t\t\t\tinvert && classes.invert\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<SettingsIcon fontSize='inherit' />\n\t\t\t</IconButton>\n\t\t\t<Popover\n\t\t\t\tid={id}\n\t\t\t\topen={open}\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tcontainer={ctn}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t\thorizontal: 'center',\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tcomponent='nav'\n\t\t\t\t\tclassName={classes.modeMenu}\n\t\t\t\t\taria-label='Mode-menu'\n\t\t\t\t\tsubheader={\n\t\t\t\t\t\t<ListSubheader component='div'>\n\t\t\t\t\t\t\t{t('common:mobile-landing.header_theme')}\n\t\t\t\t\t\t</ListSubheader>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<Typography component='div'>\n\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\tcomponent='label'\n\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\talignItems='center'\n\t\t\t\t\t\t\t\tspacing={1}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t{t('common:mobile-landing.header_light')}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\t\t\tchecked={isDark}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChangeMode}\n\t\t\t\t\t\t\t\t\t\tvalue={isDark}\n\t\t\t\t\t\t\t\t\t\tinputProps={{'aria-label': 'checkbox'}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t{t('common:mobile-landing.header_dark')}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t\t<Divider />\n\t\t\t\t<List\n\t\t\t\t\tcomponent='nav'\n\t\t\t\t\tclassName={classes.langMenu}\n\t\t\t\t\taria-label='Language-menu'\n\t\t\t\t\tsubheader={\n\t\t\t\t\t\t<ListSubheader component='div'>\n\t\t\t\t\t\t\t{t('common:mobile-landing.header_language')}\n\t\t\t\t\t\t</ListSubheader>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{i18n.options.allLanguages &&\n\t\t\t\t\t\ti18n.options.allLanguages.map(val => (\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tkey={val}\n\t\t\t\t\t\t\t\trole={undefined}\n\t\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tonClick={() => handleChangeLang(val)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<i className={val} />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary={props.t('common:' + val)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{i18n.language === val && (\n\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t<CheckIcon color='primary' />\n\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</Popover>\n\t\t</div>\n\t)\n}\n\nSettings.propTypes = {\n\ttoggleDark: PropTypes.func.isRequired,\n\ttoggleDir: PropTypes.func.isRequired,\n\tt: PropTypes.func.isRequired,\n\tinvert: PropTypes.bool,\n}\n\nSettings.defaultProps = {\n\tinvert: false,\n}\n\nexport default withTranslation(['common', 'mobile-landing'])(Settings)\n"]},"metadata":{},"sourceType":"module"}
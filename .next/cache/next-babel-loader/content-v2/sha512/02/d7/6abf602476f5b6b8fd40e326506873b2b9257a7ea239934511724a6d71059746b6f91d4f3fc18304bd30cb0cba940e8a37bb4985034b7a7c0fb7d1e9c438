{"ast":null,"code":"import _defineProperty from \"/Users/brunopaula/Desktop/sandbox/next/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport SendIcon from '@material-ui/icons/Send';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { withTranslation } from '../../i18n';\nimport brand from '../../public/text/brand';\nimport logo from '../../public/images/mobile-logo.svg';\nimport linkRouter from '../../public/text/link';\nimport Checkbox from './Checkbox';\nimport ParallaxDeco from '../Parallax/Large';\nimport useStyles from './form-style';\n\nfunction Contact(props) {\n  var classes = useStyles();\n  var t = props.t;\n\n  var _useState = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  useEffect(function () {\n    ValidatorForm.addValidationRule('isTruthy', function (value) {\n      return value;\n    });\n  });\n\n  var _useState2 = useState(false),\n      openNotif = _useState2[0],\n      setNotif = _useState2[1];\n\n  var _useState3 = useState(false),\n      check = _useState3[0],\n      setCheck = _useState3[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var handleCheck = function handleCheck(event) {\n    setCheck(event.target.checked);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    setNotif(true);\n  };\n\n  var handleClose = function handleClose() {\n    setNotif(false);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.pageWrap\n  }, __jsx(Hidden, {\n    smDown: true\n  }, __jsx(\"div\", {\n    className: classes.background\n  }, __jsx(\"div\", {\n    className: classes.gradient\n  }, __jsx(\"div\", {\n    className: classes.decoWave\n  }), __jsx(\"div\", {\n    className: classes.decoLine\n  }), __jsx(\"div\", {\n    className: classes.decoInner\n  }, __jsx(\"img\", {\n    src: \"/images/mobile/animation-banner.png\",\n    alt: \"decoration\"\n  }))))), __jsx(\"div\", {\n    className: classes.parallax\n  }, __jsx(ParallaxDeco, null)), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    key: \"top right\",\n    open: openNotif,\n    autoHideDuration: 4000,\n    onClose: handleClose,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: __jsx(\"span\", {\n      id: \"message-id\"\n    }, \"Message Sent\")\n  }), __jsx(Hidden, {\n    mdUp: true\n  }, __jsx(\"div\", {\n    className: clsx(classes.logo, classes.logoHeader)\n  }, __jsx(\"a\", {\n    href: linkRouter.mobile.home\n  }, __jsx(\"img\", {\n    src: logo,\n    alt: \"logo\"\n  }), __jsx(Typography, {\n    component: \"span\"\n  }, brand.mobile.projectName)))), __jsx(Container, {\n    maxWidth: \"md\",\n    className: classes.innerWrap\n  }, __jsx(IconButton, {\n    href: linkRouter.mobile.home,\n    className: classes.backtohome\n  }, __jsx(\"i\", {\n    className: \"ion-ios-home-outline\"\n  }), __jsx(\"i\", {\n    className: \"ion-ios-arrow-round-back\"\n  })), __jsx(Paper, {\n    className: clsx(classes.formBox, 'fragment-fadeUp')\n  }, __jsx(\"div\", {\n    className: classes.fullFromWrap\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    align: \"center\",\n    className: classes.title,\n    gutterBottom: true\n  }, t('common:contact_title')), __jsx(Typography, {\n    className: classes.desc\n  }, t('common:contact_subtitle')), __jsx(\"div\", {\n    className: classes.form\n  }, __jsx(ValidatorForm, {\n    onSubmit: handleSubmit,\n    onError: function onError(errors) {\n      return console.log(errors);\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: classes.input,\n    label: t('common:form_name'),\n    onChange: handleChange('name'),\n    name: \"Name\",\n    value: values.name,\n    validators: ['required'],\n    errorMessages: ['This field is required']\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: classes.input,\n    label: t('common:form_email'),\n    onChange: handleChange('email'),\n    name: \"Email\",\n    value: values.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['This field is required', 'email is not valid']\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: classes.input,\n    label: t('common:form_phone'),\n    onChange: handleChange('phone'),\n    name: \"Phone\",\n    value: values.phone\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: classes.input,\n    label: t('common:form_company'),\n    onChange: handleChange('company'),\n    name: \"Company\",\n    value: values.company\n  })), __jsx(Grid, {\n    item: true,\n    md: 12,\n    xs: 12\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    multiline: true,\n    rows: \"6\",\n    className: classes.input,\n    label: t('common:form_message'),\n    onChange: handleChange('message'),\n    name: \"Message\",\n    value: values.message\n  }))), __jsx(\"div\", {\n    className: classes.btnArea\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      validators: ['isTruthy'],\n      errorMessages: \"This field is required\",\n      checked: check,\n      value: check,\n      onChange: function onChange(e) {\n        return handleCheck(e);\n      },\n      color: \"primary\"\n    }),\n    label: __jsx(\"span\", null, t('common:form_terms'), __jsx(\"br\", null), __jsx(\"a\", {\n      href: \"#\"\n    }, t('common:form_privacy')))\n  }), __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"secondary\",\n    size: \"large\"\n  }, t('common:form_send'), __jsx(SendIcon, {\n    className: classes.rightIcon\n  })))))))));\n}\n\nexport default withTranslation(['common'])(Contact);","map":null,"metadata":{},"sourceType":"module"}
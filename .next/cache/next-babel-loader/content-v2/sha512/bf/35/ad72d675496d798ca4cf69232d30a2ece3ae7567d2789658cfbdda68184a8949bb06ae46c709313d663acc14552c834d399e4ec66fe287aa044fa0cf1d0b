{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport red from '@material-ui/core/colors/red';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { ValidatorComponent } from 'react-material-ui-form-validator';\nconst red300 = red['500'];\n\nconst styles = theme => ({\n  checkbox: {\n    left: 42,\n    fontSize: 12,\n    color: red300,\n    position: 'absolute',\n    marginTop: theme.spacing()\n  }\n});\n\nclass CheckboxValidatorElement extends ValidatorComponent {\n  errorText() {\n    const {\n      isValid\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n\n    if (isValid) {\n      return null;\n    }\n\n    return __jsx(\"div\", {\n      className: classes.checkbox\n    }, this.getErrorMessage());\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      errorMessages,\n      validators,\n      requiredError,\n      value,\n      checked,\n      validatorListener,\n      classes\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"errorMessages\", \"validators\", \"requiredError\", \"value\", \"checked\", \"validatorListener\", \"classes\"]);\n\n    return __jsx(\"div\", null, __jsx(Checkbox, _extends({\n      value: value,\n      checked: checked\n    }, rest, {\n      ref: r => {\n        this.input = r;\n      }\n    })), this.errorText());\n  }\n\n}\n\nexport default withStyles(styles)(CheckboxValidatorElement);","map":null,"metadata":{},"sourceType":"module"}